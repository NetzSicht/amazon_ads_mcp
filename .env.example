###############################################
# Amazon Ads MCP â€” .env example (complete)
# Copy to .env and customize for your setup
###############################################

# ------------------------
# Server/runtime settings
# ------------------------
# These are consumed by docker-compose to pass CLI args to the server.
# The server reads LOG_LEVEL directly; PORT is also used for OAuth redirect.
TRANSPORT=http              # stdio | http | streamable-http
HOST=0.0.0.0
PORT=9080
LOG_LEVEL=INFO              # DEBUG | INFO | WARNING | ERROR | CRITICAL

# OpenAPI parser mode (automatically set by server, but can be overridden)
# FASTMCP_EXPERIMENTAL_ENABLE_NEW_OPENAPI_PARSER=true

# ------------------------
# Authentication selection
# ------------------------
# Choose one provider: direct (BYOA) or openbridge
AUTH_METHOD=direct      # direct | openbridge

# Direct Amazon Ads API authentication (BYOA)
# Supply all three to enable direct auth. You may also set a default
# profile scope for API requests.
#
# AMAZON_AD_API_CLIENT_ID=amzn1.application-oa2-client.xxxxx
# AMAZON_AD_API_CLIENT_SECRET=xxxxxxxxxxxxxxxx
# AMAZON_AD_API_REFRESH_TOKEN=Atzr|IwEBxxxxxxxxxxxxxxxx


# Optional default scope/profile id (also accepts AD_API_PROFILE_ID or AMAZON_ADS_PROFILE_ID)
# AMAZON_AD_API_PROFILE_ID=1234567890

# OpenBridge authentication
# Provide a refresh token in key:secret format. Optionally set a default
# remote identity id to auto-select after startup.
# OPENBRIDGE_REFRESH_TOKEN=xxxxxx

# ------------------------
# Region & API base
# ------------------------
# Regional routing for direct auth; OpenBridge routes per identity at runtime.
# AMAZON_ADS_REGION=na        # na | eu | fe (sets a default region on startup)

# ------------------------
# Amnazon Ads API resources control
# ------------------------
# Restrict loaded API namespaces via allowlist. Accepts comma-separated namespaces
# Examples: "ads-accounts,profiles" or alias groups like "sponsored"
# AMAZON_AD_API_PACKAGES="ads-accounts,profiles"


# ------------------------
# Token persistence
# ------------------------
# Enable persistent refresh token storage (recommended). Change cache dir for Docker.
AMAZON_ADS_TOKEN_PERSIST=true
# Docker typical: /app/.cache/amazon-ads-mcp; Local default: ~/.amazon-ads-mcp/tokens.json
# AMAZON_ADS_CACHE_DIR=/app/.cache/amazon-ads-mcp

# ------------------------
# HTTP Session Management (for n8n and similar tools)
# ------------------------
# Enable session persistence for stateful HTTP clients
# Recommended for n8n, Zapier, and similar workflow tools
MCP_SESSION_PERSIST=true
# Session cookie name (default: mcp_session_id)
# MCP_SESSION_COOKIE_NAME=mcp_session_id
# Session max age in seconds (default: 3600 = 1 hour)
# MCP_SESSION_MAX_AGE=3600
# Custom session storage path (optional)
# MCP_SESSION_STORE_PATH=/app/.cache/amazon-ads-mcp/sessions.json

# ------------------------
# Downloads (exports/reports)
# ------------------------
# Base directory for downloaded exports/reports. Defaults to ./data when unset.
# For Docker, mount a volume and point this there.
# AMAZON_ADS_DOWNLOAD_DIR=/app/data




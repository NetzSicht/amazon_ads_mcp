services:
  # HTTP Proxy - Stateless gateway for n8n and external clients
  amazon-ads-mcp-proxy:
    # Build proxy from local Dockerfile
    build:
      context: .
      dockerfile: Dockerfile.proxy

    container_name: amazon-ads-mcp-proxy
    environment:
      - MCP_SERVER_URL=http://amazon-ads-mcp:9080/mcp
      - PROXY_HOST=0.0.0.0
      - PROXY_PORT=8080
      - LOG_LEVEL=INFO

    ports:
      - "8080:8080"

    depends_on:
      - amazon-ads-mcp

    restart: unless-stopped

  # MCP Server - Internal only, accessed via proxy
  amazon-ads-mcp:
    # Use pre-built image from GitHub Container Registry (recommended)
    # This automatically pulls the latest stable version
    image: ghcr.io/netzsicht/amazon_ads_mcp:latest

    # Alternative: Build locally (uncomment to use local build)
    # build:
    #   context: .
    #   dockerfile: Dockerfile

    container_name: amazon-ads-mcp
    env_file:
      - .env
    environment:
      # Server runtime
      - TRANSPORT=http
      - HOST=0.0.0.0
      - PORT=9080
      - LOG_LEVEL=INFO
      - AMAZON_AD_PACKAGES=profiles,accounts-ads-accounts
      - AMAZON_ADS_TOKEN_PERSIST=true
      - AMAZON_ADS_CACHE_DIR=/app/.cache/amazon-ads-mcp
      # Authentication (configure as needed for your environment)
      # - AUTH_METHOD=openbridge

    # Note: Port 9080 is NOT exposed externally - only accessible via proxy
    expose:
      - "9080"
    volumes:
      # Persist downloaded exports/reports
      - downloads:/app/data
      # Persist token cache across container restarts
      - cache:/app/.cache

volumes:
  downloads: {}
  cache: {}
